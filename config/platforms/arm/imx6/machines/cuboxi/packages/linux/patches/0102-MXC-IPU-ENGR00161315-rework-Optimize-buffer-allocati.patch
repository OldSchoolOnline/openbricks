From 9ec973275dc0c152a660c6747e712a7e381a960d Mon Sep 17 00:00:00 2001
From: Rudi <r.ihle@s-t.de>
Date: Tue, 20 Mar 2018 20:10:15 +0100
Subject: [PATCH] MXC-IPU: ENGR00161315 rework: Optimize buffer allocation

Allocate the two temporary buffers in a single call to improve performance
and avoid inconsistencies in case of error.

Signed-off-by: Rudi <r.ihle@s-t.de>
---
 drivers/mxc/ipu3/ipu_device.c | 24 +++++++-----------------
 1 file changed, 7 insertions(+), 17 deletions(-)

diff --git a/drivers/mxc/ipu3/ipu_device.c b/drivers/mxc/ipu3/ipu_device.c
index 39c86d9..d8b9625 100644
--- a/drivers/mxc/ipu3/ipu_device.c
+++ b/drivers/mxc/ipu3/ipu_device.c
@@ -2449,28 +2449,18 @@ static void vdi_split_process(struct ipu_soc *ipu, struct ipu_task_entry *t)
 	/*check vditmpbuf buffer have alloced or buffer size is changed */
 	if ((vdi_save_lines != parent->old_save_lines) ||
 		(vdi_size != parent->old_size)) {
-		if (parent->vditmpbuf[0] != NULL)
-			kfree(parent->vditmpbuf[0]);
-		if (parent->vditmpbuf[1] != NULL)
-			kfree(parent->vditmpbuf[1]);
 
-		parent->vditmpbuf[0] = kmalloc(vdi_size, GFP_KERNEL);
+		kfree(parent->vditmpbuf[0]);
+		parent->vditmpbuf[0] = kzalloc(2 * vdi_size, GFP_KERNEL);
 		if (parent->vditmpbuf[0] == NULL) {
 			dev_err(t->dev,
-				"[0x%p]Falied Alloc vditmpbuf[0]\n", (void *)t);
+				"[0x%p] Failed Alloc vditmpbuf\n", (void *)t);
+			parent->old_save_lines = parent->old_size = 0;
+			parent->vditmpbuf[1] = NULL;
 			mutex_unlock(lock);
 			return;
 		}
-		memset(parent->vditmpbuf[0], 0, vdi_size);
-
-		parent->vditmpbuf[1] = kmalloc(vdi_size, GFP_KERNEL);
-		if (parent->vditmpbuf[1] == NULL) {
-			dev_err(t->dev,
-				"[0x%p]Falied Alloc vditmpbuf[1]\n", (void *)t);
-			mutex_unlock(lock);
-			return;
-		}
-		memset(parent->vditmpbuf[1], 0, vdi_size);
+		parent->vditmpbuf[1] = parent->vditmpbuf[0] + vdi_size;
 
 		parent->old_save_lines = vdi_save_lines;
 		parent->old_size = vdi_size;
@@ -3182,7 +3172,7 @@ static void wait_split_task_complete(struct ipu_task_entry *parent,
 	}
 
 	kfree(parent->vditmpbuf[0]);
-	kfree(parent->vditmpbuf[1]);
+	parent->vditmpbuf[0] = parent->vditmpbuf[1] = NULL;
 
 	if (ret < 0)
 		parent->state = STATE_TIMEOUT;
-- 
2.7.4

